・グラフとは、頂点が枝で結ばれたもの
・ネットワークとは、頂点や枝に数値データが付加されたもの
・ネットワーク最適化問題とは、ネットワークを使って表現される組み合わせ最適化問題

・無向グラフとは、枝に向きがないグラフ
・有向グラフとは、枝に向きがあるグラフ


・ネットワーク最適化問題の例として
「最小木問題」「最短路問題」「最大流問題」「最小費用問題」「割当問題」がある

・最大流問題の定義
　入力：
　  有向グラフ G = (V, E) V: vertex, E: edge
　  供給点(=ソース) s ∈ V
　  需要点(=シンク) t ∈ V
　  枝 (i,j) ∈ V ごとの容量 uij >= 0

  目的：
    ソースからシンクに向けて、ものをたくさん流す

  条件1:
    容量条件
      0 <= 各枝を流れるものの量 <= 枝の容量
  条件2:
    流量保存条件
      頂点から流れ出すものの量 = 流れ込むものの量

・最大流問題の定式化
  　変数 xij : フロー = 枝 (i,j) を流れるものの量
　  変数 f   : 総流量 = シンクに流れ込む総量 = ソースから流れ出す総量

　  目的　　　: ソースからシンクに流れるもの f の最大化
　  容量条件　: 0 <= 各枝を流れるものの量 <= 枝の容量
　            0 <= xij <= uij

・最大流問題の定式化のまとめ
　  最大化 f
　  条件　0 <= xij <= uij  ※ (i,j) ∈ E

    Σ xkj - Σ xik = 0    k はs, t以外の点
    Σ xsj - Σ xis = f    s
    Σ xtj - Σ xit = -f   t

    この問題の実行可能解 xij -- 実行可能フロー
    総流量が最大の実行可能フロー -- 最大フロー

・最大流問題の解法
    線形計画法の特殊ケースであり
    単体法で解くことができる

　  最大流問題は数学的な構造をもつ
　  増加路アルゴリズムなどを使うと、効率的に解ける

・最大フローの判定
    残余ネットワークを利用する

    増加路：残余ネットワークでのソースからシンクへのパス
      定理１：残余ネットワークに増加路が存在する
        →現在のフローの総流量は増加可能
      定理２：残余ネットワークに増加路が存在しない
        →現在のフローは最大フロー

・増加路アルゴリズム
    step0. 初期の実行可能フローとして、全ての枝のフロー量を0とする
    step1. 現在のフローに関する残余ネットワークを作る
    step2. 残余ネットワークに増加路が存在しない→終了
    step3. 残余ネットワークの増加路を１つ求め、それを用いて現在のフローを更新する
    step4. ステップ1へ戻る

・カット
　  考え方：フローを流すときに、ネットワークのボトルネックはどこか

　  カット(S,T): S, Tは頂点集合Vを分割したもの
　  Sはソースを含み、Tはシンクを含む。

　  容量 C(S,T) = SからTへ向かう枝の容量の和

    最小カット：容量が最小のカット

・カットの性質
　  ① 任意のカット(S,T)と任意の実行可能フロー xij について
    SからTへの枝のフローの流量の和　x(S,T)
     - TからSへの枝のフローの流量の和 x(T,S)
       = フローの総流量
    
    ② 任意のカット(S,T)とフロー xij について
        フローの総流量 f <= カットの容量 C(S,T)










